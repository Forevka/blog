env:
  dockerRepositoryName: 'forevka/blog'

name: CI Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    name: Build and Push Fat Image
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository with submodules
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: 'recursive'
      
      # Login to Docker registry
      - name: Docker Login
        run: |
          docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}
      
      # Create the production config file
      - name: Create production config file
        run: |
          cat <<EOF > Blog/appsettings.Production.json
          {
            "$schema": "appsettings-schema.json",
            "Serilog": {
              "MinimumLevel": {
                "Default": "Information"
              },
              "WriteTo": [
                {
                  "Name": "Async",
                  "Args": {
                    "configure": [
                      {
                        "Name": "Console"
                      }
                    ]
                  }
                }
              ]
            },
            "Umbraco": {
              "CMS": {
                "Content": {
                  "MacroErrors": "Throw"
                },
                "Hosting": {
                  "Debug": false
                },
                "Security": {
                  "BackOfficeHost": "https://forevka.dev"
                }
              }
            },
            "ConnectionStrings": {
              "umbracoDbDSN": "${{ secrets.PROD_CONNECTION_STRING }}",
              "umbracoDbDSN_ProviderName": "System.Data.SqlClient"
            }
          }
          EOF
      
      # Verify the production config file exists
      - name: Verify production config file exists
        run: |
          echo "Listing contents of Blog directory:"
          ls -la Blog
          if [ -f Blog/appsettings.Production.json ]; then
            echo "Production config file successfully created."
          else
            echo "Error: Production config file not found!" >&2
            exit 1
          fi
      
      # Build the Docker image (fat image) and tag it as latest
      - name: Build the Docker image (fat image)
        run: docker build . --tag ${{ env.dockerRepositoryName }}:latest
      
      # Push the fat image so the next job can pull it
      - name: Push fat image to registry
        run: docker push ${{ env.dockerRepositoryName }}:latest

  slim:
    name: Slim the Docker Image
    runs-on: ubuntu-latest
    needs: build
    steps:
      # Login to Docker registry
      - name: Docker Login
        run: docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}
      
      # Pull the fat image so it's available locally
      - name: Pull fat Docker image
        run: docker pull ${{ env.dockerRepositoryName }}:latest
      
      # Install docker-slim
      - name: Install docker-slim
        run: |
          curl -sL https://raw.githubusercontent.com/slimtoolkit/slim/master/scripts/install-slim.sh | sudo -E bash -
      
      # Run docker-slim to create the slim version
      - name: Slim the Docker image
        run: docker-slim build ${{ env.dockerRepositoryName }}:latest
        # This command will create a slim image tagged as forevka/blog.slim by default

  push:
    name: Push Slim Image
    runs-on: ubuntu-latest
    needs: slim
    steps:
      # Login to Docker registry
      - name: Docker Login
        run: docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}
      
      # Push the slim image to your registry
      - name: Push slim image to registry
        run: docker push ${{ env.dockerRepositoryName }}.slim
